<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net461;netstandard2.0</TargetFrameworks>
    <Description>Use Microsoft.Extensions.DependencyInjection to inject xunit testclass. If you want write Microsoft.Extensions.Logging to ITestOutputHelper, please install Xunit.DependencyInjection.Logging.

Release notes:

8.9: Extends the test framework to execute tests in parallel.
8.8: Added support `BuildHost` method in startup.
8.7: Allow missing default startup in some case.
8.6: Support any awaitable type of async test method.
8.5: Change analyzer category.
8.4: Fix #63: allow modify default service from DI container.
8.3: Add ActivitySource(name: Xunit.DependencyInjection) and ValueTask/ValueTask&lt;&gt; support.
8.2: Fix #60: support IAsyncDisposable.
8.1: Startup allow static method or class (like Asp.Net Core startup).
8.0: New feature: Support multiple startup.</Description>
    <PackageTags>xunit ioc di DependencyInjection test</PackageTags>
    <Version>8.9.0</Version>
    <PackageReleaseNotes>$(Description)</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <Using Include="Microsoft.Extensions.DependencyInjection" />
    <Using Include="Microsoft.Extensions.Hosting" />
    <Using Include="System.Reflection" />
    <Using Include="Xunit.Abstractions" />
    <Using Include="Xunit.Sdk" />

    <InternalsVisibleTo Include="Xunit.DependencyInjection.StaFact" Key="$(PublicKey)" />
    <InternalsVisibleTo Include="Xunit.DependencyInjection.Test" Key="$(PublicKey)" />

    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.0" />
    <PackageReference Include="xunit.extensibility.execution" Version="[2.4.2, 3.0.0)" />

    <ProjectReference Include="..\Xunit.DependencyInjection.Analyzer\Xunit.DependencyInjection.Analyzer.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(PackageId).targets" Pack="True" PackagePath="build\net461;build\netstandard2.0;buildTransitive\net461;buildTransitive\netstandard2.0;buildMultiTargeting" />

    <None Include="..\Xunit.DependencyInjection.Analyzer\tools\*.*" PackagePath="tools" Pack="true" />
    <None Include="..\Xunit.DependencyInjection.Analyzer\bin\$(Configuration)\netstandard2.0\Xunit.DependencyInjection.Analyzer.dll" PackagePath="analyzers\dotnet\cs" Pack="true" />
  </ItemGroup>

</Project>
